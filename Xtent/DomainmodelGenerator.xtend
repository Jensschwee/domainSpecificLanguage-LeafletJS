/*
 * generated by Xtext 2.11.0
 */
package org.example.domainmodel.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import org.example.domainmodel.domainmodel.Include
import java.util.Map
import org.eclipse.emf.common.util.EList
import org.example.domainmodel.domainmodel.Script
import org.example.domainmodel.domainmodel.Style
import java.util.List
import org.example.domainmodel.domainmodel.Model
import org.example.domainmodel.domainmodel.StartZoom
import org.example.domainmodel.domainmodel.MapContainterOptions
import org.example.domainmodel.domainmodel.ScrollWheelZoom
import org.example.domainmodel.domainmodel.DoubleClickZoom
import org.example.domainmodel.domainmodel.DraggingDisable
import org.example.domainmodel.domainmodel.TouchZoomDisable
import org.example.domainmodel.domainmodel.KeyboardDisable
import org.example.domainmodel.domainmodel.DisableZoomBtn
import org.example.domainmodel.domainmodel.MapTilelayerOptions
import org.example.domainmodel.domainmodel.MinZoom
import org.example.domainmodel.domainmodel.MaxZoom
import org.example.domainmodel.domainmodel.MaxNativeZoom
import org.example.domainmodel.domainmodel.ApiKey
import org.example.domainmodel.domainmodel.Attribution
import org.example.domainmodel.domainmodel.KeyValue

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class DomainmodelGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		val model = resource.allContents.filter(typeof(Model)).next		
		fsa.generateFile("/Leaflet.html",generateLeafletHTML(model));
	}
	
	def generateLeafletHTML(Model model){
		
		generateStaticHeader();
		generateInclude(model.includes);
		generateStaticHTMLBODY();
		generateMaps(model.map);
		generateStatickFooter();
	}
	
	def generateStaticHTMLBODY() '''
	</head>
					
		<body>
		    <div id="map">
		    </div>
		</body>
		
		<script>
		    function CallURL(url, data) {
		        $.ajax({
		            url: url,
		            type: "GET",
		            dataType: "jsonp",
		            async: false,
		            success: function (msg) {
		                console.log(msg);
		                JsonpCallback(JSON.parse(msg), data);
		            },
		            error: function () {
		                ErrorFunction();
		            }
		        });
		    }
		
		    function JsonpCallback(json, data) {
		        data = json.result;
		    }
		
		    function ErrorFunction(parameters) {
		        console.log("ERROR!");
		    }
	'''
	
	def generateStatickFooter() '''
		</script>
	</html>
	'''
	
	def generateMaps(org.example.domainmodel.domainmodel.Map map) '''
	var «map.mapName» = L.map('map',
		        {
		        	«generateMapContainterOptions(map.optinals.filter(typeof(MapContainterOptions)).toList())»
		        }).setView([«map.location.lat», «map.location.long»], «generateMapOptinalStartZoom(map)»);
	
	 L.tileLayer('«map.mapSource»', {
 			«generateMapTilelayerOptions(map.optinals.filter(typeof(MapTilelayerOptions)).toList())»
	    }).addTo(«map.mapName»);
	'''
	
	def generateMapTilelayerOptions(List<MapTilelayerOptions> mapTilelayerOptions)'''
		«FOR m : mapTilelayerOptions SEPARATOR ','»
			«generateMapTilelayerOptionsMember(m)»
		«ENDFOR»
	'''
	
	def dispatch generateMapTilelayerOptionsMember(MinZoom s)'''
		minZoom : «s.zoom»
	'''
	
	def dispatch generateMapTilelayerOptionsMember(MaxZoom s)'''
		maxZoom : «s.zoom»
	'''
	
	def dispatch generateMapTilelayerOptionsMember(MaxNativeZoom s)'''
		maxNativeZoom : «s.zoom»
	'''
	
	def dispatch generateMapTilelayerOptionsMember(ApiKey s)'''
		apikey : '«s.apikey»'
	'''
	
	def dispatch generateMapTilelayerOptionsMember(Attribution s)'''
		attribution : «s.attribution» 
	'''
	
	def dispatch generateMapTilelayerOptionsMember(KeyValue s)'''
		«s.key» : «s.value»
	'''
	
	def generateMapContainterOptions(List<MapContainterOptions> mapContainterOptions)'''
		«FOR m : mapContainterOptions SEPARATOR ','»
			«generateMapContainterOptionsMember(m)»
		«ENDFOR»
	'''
	
	def dispatch generateMapContainterOptionsMember(ScrollWheelZoom s)'''
		scrollWheelZoom : «s.inactive»
	'''
	
	def dispatch generateMapContainterOptionsMember(DoubleClickZoom s)'''
		doubleClickZoom : «s.inactive»
	'''
	
	def dispatch generateMapContainterOptionsMember(DisableZoomBtn s)'''
		zoomControl : «s.inactive»
	'''
	
	def dispatch generateMapContainterOptionsMember(KeyboardDisable s)'''
		keyboard : «s.inactive»
	'''
	
	def dispatch generateMapContainterOptionsMember(TouchZoomDisable s)'''
		touchZoom : «s.inactive»
	'''
	
	def dispatch generateMapContainterOptionsMember(DraggingDisable s)'''
		draggable :  «s.inactive»
	'''
	
	def generateMapOptinalStartZoom(org.example.domainmodel.domainmodel.Map map)'''
		«var startZoom = map.optinals.filter(typeof(StartZoom))»
		«IF(!startZoom.nullOrEmpty)»
		«startZoom.get(0).zoom»
		«ENDIF»
	'''
	
	def generateMapOptinal(org.example.domainmodel.domainmodel.Map map)
	{
		
	}
		
	def generateStaticHeader()'''
		<!DOCTYPE html>
				<html xmlns="http://www.w3.org/1999/xhtml">
				<head>
					<link rel="stylesheet" href="https://unpkg.com/leaflet@1.0.3/dist/leaflet.css" />
				    <link rel="stylesheet" href="https://unpkg.com/leaflet-easybutton@2.0.0/src/easy-button.css">
					<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.0/jquery.min.js"></script>
					<script src="https://unpkg.com/leaflet@1.0.3/dist/leaflet.js"></script>
				    <script src="https://unpkg.com/leaflet-easybutton@2.0.0/src/easy-button.js"></script>
					<title>Leaflet DSL</title>
				    <style type="text/css">
				        html, body {
				            height: 100%;
				            margin: 0;
				        }
				        #map {
				            min-height: 100%;
				        }
					</style>
	'''
	
	def generateInclude(List<Include> includes) '''
	«FOR i : includes»
		«generateIncludeMember(i)»
	«ENDFOR»
	'''
	
	def dispatch generateIncludeMember(Script s) '''
	<script src="«s.source»"/>
	'''
	def dispatch generateIncludeMember(Style s) '''
    <link rel="stylesheet" href="«s.source»" />
	'''
	
}
