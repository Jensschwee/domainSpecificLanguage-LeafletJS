grammar org.example.domainmodel.Domainmodel with org.eclipse.xtext.common.Terminals

generate domainmodel "http://www.example.org/domainmodel/Domainmodel"

Model:
    leafletVersion=LeafletVersion? includes+=Include* map=Map modelItems+=ModelItems*
;

ModelItems:
	Icon | Styling| Layer| Button | Transform | DataSource
;

LeafletVersion:
	'leaflet' version=LeafletSupportedVersions
;

LeafletSupportedVersions:
	{VERSION103} '1.0.3'
;

Button:
	'button' btn=ToggleButton
;

ToggleButton:
	'toggles' layer=[Layer] icon=[Icon] 'location' location=ScreenLocation
;

ScreenLocation:
	{TOPRIGHT} 'topRight' | {TOPLEFT}'topLeft' | {BOTTOMLEFT}'bottomLeft' | {BOTTOMRIGHT}'bottomRight'
;

Styling:
	'style' name=ID (':' base=[Styling])? '{' styles+=CSSStyle+ '}'
;

CSSStyle:
	LineColor | LineWidth | BackgroundColor | BackgroundOpacity | PointerIcon | LineOpacity
;

PointerIcon:
	'pointerIcon' icon=[Icon]
;

Icon:
	'icon' name=ID 'size' size=INT 'source' source=STRING
;

BackgroundOpacity:
	'backgroundOpacity' value=INT '%'
;

BackgroundColor:
	'backgroundColor' color=BackgroundColorTypes
;

BackgroundColorTypes:
	ID | HEXCOLOR
;

LineWidth:
	'lineWidth' value=INT
;

LineColor:
	'lineColor' value=ID | hex=HEXCOLOR
;

LineOpacity:
	'lineOpacity' value=INT '%'
;

Transform:
	'transform' name=ID variable=ID expression=MathTermSimple
;

Layer:
	'layer' name=ID 'from' datasource=[DataSource] ('{' filter+=Filter*'}')?
;

Filter:
	'filter' ((style=[Styling]) |  ('type' mapType=MapType) | ('where' expression=Disjunction))+
;

MapType:
	{POINT}'point' | {POLYGON}'polygon'
;

MathTermSimple returns MathExp:
	MathTermAdv ({MathOp.left=current} op=OperatorAddMinus right=MathTermAdv)*
;

MathTermAdv returns MathExp:
  MathFactor ({MathOp.left=current} op=OperatorMultiDiv right=MathFactor)*
;

MathFactor  returns MathExp:
	MathTerm| {Value} 'value' | '('MathTermSimple')'
;

OperatorAddMinus:
	{MINUS} '-'| {PLUS} '+'
;

OperatorMultiDiv:
	{MULTIPLI} '*'| {DIVISION} '/'
;

MathTerm:
	NumberTypes | transform=[Transform]
;

Disjunction returns LogicExpression:
	Conjunction ({LogicExp.left=current} op='or' right=Disjunction)?
;

Conjunction returns LogicExpression:
	LogicTerm  ({LogicExp.left=current} op='and' right=Conjunction)?
;

LogicTerm returns LogicExpression:
	Comparison | '(' Disjunction ')'
;

Comparison:
	left=AllTypes oparator=LogicOparator right=AllTypes
;

LogicOparator:
	{LESS} '<' | {MORE}'>' | {EQ}'=' | {EQLESS}'=<' | {EQMORE}'=>' | {EQLESS}'<=' | {EQMORE}'>=' | {NOT}'!=' | {NOT}'<>'| {NOT}'=!'
;

DataSource:
	'source' sourceType=SourceType name=ID sourceLocation=STRING '{' variables+=DataSourceVariable+ '}'
;

DataSourceVariable:
	'variable' vname=ID
;

SourceType:
	{JSON}'json'
;

Include:
	'include' Script | 'include' Style
;

Style:
	'style' source=STRING
;

Script:
	'script' source=STRING
;

Map:
	'map' mapName=ID (optinals+=MapOptions)* location=GeoLocation mapSource=STRING
;

GeoLocation:
	'lat' lat=DOUBLE  'long' long=DOUBLE
;

MapOptions:
	MapContainterOptions | MapTilelayerOptions  | StartZoom
;

MapContainterOptions:
	ScrollWheelZoom | DoubleClickZoom| KeyboardDisable| DisableZoomBtn | TouchZoomDisable | DraggingDisable
;

MapTilelayerOptions:
	MinZoom | MaxZoom | MaxNativeZoom | ApiKey | Attribution | KeyValue
;

ScrollWheelZoom:
	'scrollWheelZoom' inactive=BOOLEAN
;

DoubleClickZoom:
	'doubleClickZoom' inactive=BOOLEAN
;


KeyValue:
	key=ID value=STRING
;

KeyboardDisable:
	'keyboardDisable' inactive=BOOLEAN
;

DisableZoomBtn:
	'disableZoomBtn' inactive=BOOLEAN
;

DraggingDisable:
	'draggingDisable' inactive=BOOLEAN
;

TouchZoomDisable:
	'touchZoom' inactive=BOOLEAN
;


MaxNativeZoom:
	'maxNativeZoom' zoom=INT
;

MaxZoom:
	'maxZoom' zoom=INT
;

MinZoom:
	'minZoom' zoom=INT
;

StartZoom:
	'startZoom' zoom=INT
;

ApiKey:
	'apikey' apikey=STRING
;

Attribution:
	'attribution' attribution=STRING
;

AllTypes:
	NumberTypes |string=STRING | BOOLEAN | id=ID
;

NumberTypes:
	double=DOUBLE|int=INTEGER
;

INTEGER:
	(neq?=('-'))? value=INT
;

DOUBLE:
    value=INTEGER '.' decimals=INT;

BOOLEAN:
	 {TRUE}'true' | {FALSE}'false'
;

terminal HEXCOLOR:
	'#' HEXCHAR HEXCHAR HEXCHAR HEXCHAR HEXCHAR HEXCHAR
;

terminal HEXCHAR:
	('a'..'f'|'A'..'F'|'0'..'9')
;