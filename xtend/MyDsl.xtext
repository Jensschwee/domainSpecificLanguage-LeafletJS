grammar dk.sdu.mmmi.msd.LeafletDSL with org.eclipse.xtext.common.Terminals

generate leafletDSL "http://www.sdu.dk/mmmi/msd/LeafletDSL"

Model:
    leafletVersion=LeafletVersion? includes+=Include* map=Map modelItems+=ModelItems*
;

ModelItems:
	Icon | Styling | Layer | Button | Transform | DataSource | Assignment
;

LeafletVersion:
	'leaflet' version=LeafletSupportedVersions
;

Button:
	'button' btn=ToggleButton
;

ToggleButton:
	'toggles' layer=[Layer] icon=[Icon] 'location' location=ScreenLocation
;

ScreenLocation:
	{TOPRIGHT} 'topRight' | {TOPLEFT}'topLeft' | {BOTTOMLEFT}'bottomLeft' | {BOTTOMRIGHT}'bottomRight'
;

Styling:
	'style' name=ID (':' base=[Styling])? '{' styles+=CSSStyle+ '}'
;

CSSStyle:
	LineColor | LineWidth | BackgroundColor | BackgroundOpacity | PointerIcon | LineOpacity
;

PointerIcon:
	'pointerIcon' icon=[Icon]
;

Icon:
	'icon' name=ID 'size' size=INT 'source' source=STRING
;

BackgroundOpacity:
	'backgroundOpacity' value=INT '%'
;

BackgroundColor:
	'backgroundColor' color=BackgroundColorTypes
;

BackgroundColorTypes:
	ID | HEXCOLOR
;

LineWidth:
	'lineWidth' value=INT
;

LineColor:
	'lineColor' color=BackgroundColorTypes
;

LineOpacity:
	'lineOpacity' value=INT '%'
;

Assignment:
	'var' name=ID ':=' exp=AssignmentExp
;

AssignmentExp:
	Set | NumberTypes
;

// TODO: union
// TODO: intersect
// TODO: subtract
// TODO: all

Transform:
	'transform' name=ID variable=ID 'where' expression=MathTermSimple
;

Layer:
	'layer' name=ID 'from' datasource=[DataSource] ('{' filter+=Filter*'}')?
;

Filter:
	'filter' ((style=[Styling]) |  ('type' mapType=MapType) | ('where' expression=Disjunction))+
;

MapType:
	{POINT} 'point' | {POLYGON} 'polygon' | {LINESTRING} 'linestring' | {MULTILINESTRING} 'multilinestring' | {MULTIPOINT} 'multipoint' | {GEOMETRYCOLLECTION} 'geometrycollection' | {MULTIPOLYGON} 'multipolygon'
;

MathTermSimple returns MathExp:
	MathTermAdv ({MathOp.left=current} op=OperatorAddMinus right=MathTermAdv)*
;

MathTermAdv returns MathExp:
  MathFactor ({MathOp.left=current} op=OperatorMultiDiv right=MathFactor)*
;

MathFactor returns MathExp:
	MathTerm | {Value} 'value' | '(' MathTermSimple ')'
;

OperatorAddMinus:
	{MINUS} '-'| {PLUS} '+'
;

OperatorMultiDiv:
	{MULTIPLI} '*'| {DIVISION} '/'
;

MathTerm:
	NumberTypes | transform=[Transform]
;

Disjunction returns LogicExpression:
	Conjunction ({LogicExp.left=current} op='or' right=Disjunction)?
;

Conjunction returns LogicExpression:
	LogicTerm  ({LogicExp.left=current} op='and' right=Conjunction)?
;

LogicTerm returns LogicExpression:
	Comparison | '(' Disjunction ')'
;

Comparison:
	LogicComparison | SetComparison
;

LogicComparison:
	left=AllTypes operator=LogicComparisonOperator right=AllTypes
;

// TODO: is ID a declared set variable?
SetComparison:
	left=ID operator=SetComparisonOperator right=SetExpression
;

SetExpression returns SetExp:
	SetTerm ({SetExpression.left=current} op=SetOperator right=SetTerm)*
;

SetTerm returns SetExp:
	SetTypes | '(' SetExpression ')'
;

SetOperator:
	{UNION} 'union' | {INTERSECT} 'intersect' | {DIFF} 'subtract'
;

// TODO: is ID a declared set variable?
SetTypes:
	set=Set | id=ID
;

SetComparisonOperator:
	{CONTAINS} 'contain' | {CONTAINS} 'contains'
;

Set:
	{Set} '[' (items+=AllSetTypes)? (',' items+=AllSetTypes)* ']'
;

LogicComparisonOperator:
	{LESS} '<' | {MORE} '>' | {EQ} '=' | {EQLESS} '=<' | {EQMORE} '=>' | {EQLESS} '<=' | {EQMORE} '>=' | {NOT} '!=' | {NOT} '<>' | {NOT} '=!'
;

DataSource:
	'source' sourceType=SourceType name=ID sourceLocation=STRING '{' variables+=DataSourceVariable+ '}'
;

DataSourceVariable:
	'var' vname=ID
;

SourceType:
	{GEOJSON} 'geojson'
;

Include:
	'include' Script | 'include' Style
;

Style:
	'style' source=STRING
;

Script:
	'script' source=STRING
;

Map:
	'map' mapName=ID (optinals+=MapOptions)* location=GeoLocation mapSource=STRING
;

GeoLocation:
	'lat' lat=DOUBLE  'long' long=DOUBLE
;

MapOptions:
	MapContainterOptions | MapTilelayerOptions  | StartZoom
;

MapContainterOptions:
	ScrollWheelZoom | DoubleClickZoom| KeyboardDisable| DisableZoomBtn | TouchZoomDisable | DraggingDisable
;

MapTilelayerOptions:
	MinZoom | MaxZoom | MaxNativeZoom | ApiKey | Attribution | KeyValue
;

ScrollWheelZoom:
	'scrollWheelZoom' inactive=BOOLEAN
;

DoubleClickZoom:
	'doubleClickZoom' inactive=BOOLEAN
;


KeyValue:
	key=ID value=STRING
;

KeyboardDisable:
	'keyboardDisable' inactive=BOOLEAN
;

DisableZoomBtn:
	'disableZoomBtn' inactive=BOOLEAN
;

DraggingDisable:
	'draggingDisable' inactive=BOOLEAN
;

TouchZoomDisable:
	'touchZoom' inactive=BOOLEAN
;


MaxNativeZoom:
	'maxNativeZoom' zoom=INT
;

MaxZoom:
	'maxZoom' zoom=INT
;

MinZoom:
	'minZoom' zoom=INT
;

StartZoom:
	'startZoom' zoom=INT
;

ApiKey:
	'apikey' apikey=STRING
;

Attribution:
	'attribution' attribution=STRING
;

AllSetTypes:
	NumberTypes | s=STRING | BOOLEAN
;

AllTypes:
	NumberTypes | string=STRING | BOOLEAN | id=ID
;

NumberTypes:
	double=DOUBLE | int=INTEGER
;

INTEGER:
	(neq?=('-'))? value=INT
;

DOUBLE:
    value=INTEGER '.' decimals=INT;

BOOLEAN:
	 {TRUE} 'true' | {FALSE} 'false'
;

terminal HEXCOLOR:
	'#' HEXCHAR HEXCHAR HEXCHAR HEXCHAR HEXCHAR HEXCHAR
;

terminal fragment HEXCHAR:
	('a'..'f'|'A'..'F'|'0'..'9')
;

LeafletSupportedVersions:
	version=STRING
;
